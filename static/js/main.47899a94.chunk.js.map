{"version":3,"sources":["store/todos/API_URL.ts","store/todos/actionTodos.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","store/todos/reducerTodos.ts","store/rootRecuder.ts","store/mail.ts","index.tsx"],"names":["request","url","fetch","then","response","ok","Error","json","todosFetchData","userId","dispatch","result","type","user","catch","todos","TodoList","useSelector","state","reducerTodos","todosToRender","input","select","useDispatch","useEffect","className","value","onChange","event","addInput","target","addSelect","map","todo","id","title","completed","htmlFor","readOnly","checked","onClick","chooseUserId","deleteTodo","CurrentUser","React","memo","name","email","phone","App","initialState","filter","obl","toLowerCase","includes","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","console","log","getState","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47899a94.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate.academy/students-api/`;\n\nexport const request = (url: string) => {\n  const data = fetch(`${API_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n\n  return data;\n};\n","import { request } from './API_URL';\n\nexport function todosFetchDataSuccess(todos: Todo[]) {\n  return {\n    type: 'todosFetchDataSuccess',\n    todos,\n  };\n}\n\nexport function userFetchDataSuccess(user: User) {\n  return {\n    type: 'userFetchDataSuccess',\n    user,\n  };\n}\n\nexport function userFetchDataFailed() {\n  return {\n    type: 'userFetchDataSuccess',\n    user: null,\n  };\n}\n\nexport function deleteTodo(userId: number) {\n  return {\n    type: 'deleteTodo',\n    userId,\n  };\n}\n\nexport function todosFetchData(userId?: number) {\n  let url = 'todos';\n\n  if (userId) {\n    url = `users/${userId}`;\n\n    return (dispatch : any) => request(url)\n      .then(result => dispatch(userFetchDataSuccess(result)))\n      .catch(() => {\n        dispatch(userFetchDataFailed());\n      });\n  }\n\n  return (dispatch : any) => request(url)\n    .then(result => dispatch(todosFetchDataSuccess(result)));\n}\n\nexport function addInput(input: string) {\n  return {\n    type: 'ADD_Input',\n    input,\n  };\n}\n\nexport function addSelect(select: string) {\n  return {\n    type: 'ADD_Select',\n    select,\n  };\n}\n\nexport function chooseUserId(userId: number) {\n  return {\n    type: 'chooseUserId',\n    userId,\n  };\n}\n\nexport function holdUser() {\n  return {\n    type: 'chooseUserId',\n    userId: 0,\n  };\n}\n","import './TodoList.scss';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport className from 'classnames';\nimport {\n  todosFetchData, addInput, addSelect, chooseUserId, deleteTodo,\n} from '../../store/todos/actionTodos';\n\nexport const TodoList: React.FC<{}> = () => {\n  const { todosToRender, input, select } = useSelector((state: Initial) => state.reducerTodos);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(todosFetchData());\n  }, []);\n\n  useEffect(() => {\n    dispatch(todosFetchData());\n  }, [select, input]);\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <div className=\"TodoList__list-container\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={event => dispatch(addInput(event.target.value))}\n        />\n        <select\n          value={select}\n          onChange={event => dispatch(addSelect(event.target.value))}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n\n        </select>\n        <ul className=\"TodoList__list\">\n          {todosToRender.map(todo => {\n            const {\n              id, title, userId, completed,\n            } = todo;\n\n            return (\n              <li\n                className={className('TodoList__item', `TodoList__item--${\n                  completed ? 'checked' : 'unchecked'\n                }`)}\n                key={id}\n              >\n                <label htmlFor={title}>\n                  <input type=\"checkbox\" id={title} readOnly checked={completed} />\n                  <p>{title}</p>\n                </label>\n\n                <button\n                  className=\"TodoList__user-button button\"\n                  type=\"button\"\n                  onClick={() => {\n                    dispatch(todosFetchData(userId));\n                    dispatch(chooseUserId(userId));\n                  }}\n                >\n                  {`User#${userId}`}\n                </button>\n\n                <button\n                  className=\"TodoList__user-button button\"\n                  type=\"button\"\n                  onClick={() => {\n                    dispatch(deleteTodo(id));\n                  }}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { holdUser } from '../../store/todos/actionTodos';\n\nexport const CurrentUser = React.memo(() => {\n  const { user } = useSelector((state: Initial) => state.reducerTodos);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      { user ? (\n        <div className=\"CurrentUser\">\n\n          <h2 className=\"CurrentUser__title\">\n            <span>{`Selected user: ${user.id}`}</span>\n          </h2>\n          <h3 className=\"CurrentUser__name\">{user.name}</h3>\n          <p className=\"CurrentUser__email\">{user.email}</p>\n          <p className=\"CurrentUser__phone\">{user.phone}</p>\n          <button\n            className=\"CurrentUser__clear button\"\n            type=\"button\"\n            onClick={() => dispatch(holdUser())}\n          >\n            Hide User\n          </button>\n        </div>\n      ) : (\n        <h3>404 Not Found</h3>\n      )}\n    </>\n  );\n});\n","import React from 'react';\n\nimport './App.scss';\nimport { useSelector } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nconst App: React.FC = () => {\n  const { userId } = useSelector((state: Initial) => state.reducerTodos);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {userId ? (<CurrentUser />) : (<h3>Choose a User!</h3>)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const initialState = {\n  todos: [],\n  todosToRender: [],\n  input: '',\n  select: 'all',\n  user: null,\n  userId: 0,\n};\n\nfunction filter(state: Todo[], input: string, select: string) {\n  let obl = [...state];\n\n  if (select === 'active') {\n    obl = obl.filter((todo: Todo) => todo.completed === false);\n  }\n\n  if (select === 'completed') {\n    obl = obl.filter((todo: Todo) => todo.completed === true);\n  }\n\n  if (input) {\n    obl = obl.filter((todo: Todo) => {\n      return (todo.title).toLowerCase().includes(input.toLowerCase());\n    });\n  }\n\n  return obl;\n}\n\nexport function reducerTodos(state = initialState, action: any) {\n  switch (action.type) {\n    case 'todosFetchDataSuccess':\n      return {\n        ...state,\n        todos: action.todos,\n        todosToRender: filter(state.todos, state.input, state.select),\n      };\n    case 'userFetchDataSuccess':\n      return {\n        ...state,\n        user: action.user,\n      };\n    case 'ADD_Input':\n      return {\n        ...state,\n        input: `${action.input}`,\n      };\n    case 'ADD_Select':\n      return {\n        ...state,\n        select: `${action.select}`,\n      };\n    case 'chooseUserId':\n      return {\n        ...state,\n        userId: action.userId,\n      };\n    case 'deleteTodo':\n      return {\n        ...state,\n        todos: state.todos.filter((todo: Todo) => todo.id !== action.userId),\n        todosToRender: state.todos.filter((todo: Todo) => todo.id !== action.userId),\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { reducerTodos } from './todos/reducerTodos';\n\nexport const rootReducer = combineReducers({\n  reducerTodos,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './rootRecuder';\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\n// eslint-disable-next-line no-console\nstore.subscribe(() => console.log((store.getState())));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nimport { store } from './store/mail';\n\nconst Root: React.FC = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}